A NoSQL (often interpreted as Not only SQL) database provides a mechanism for storage and retrieval of data that is modeled in means other
than the tabular relations used in relational databases.

Motivations for this approach include simplicity of design, horizontal scaling, and finer control over availability. The data structures 
used by NoSQL databases (e.g. key-value, graph, or document) differ from those used in relational databases, making some operations faster 
in NoSQL and others faster in relational databases. The particular suitability of a given NoSQL database depends on the problem it must solve.

NoSQL databases are increasingly used in big data and real-time web applications. NoSQL systems are also called "Not only SQL" to emphasize 
that they may also support SQL-like query languages.

Types of NoSQL databases:

* Column: Accumulo, Cassandra, Druid, HBase, Vertica
* Document: Lotus Notes, Clusterpoint, Apache CouchDB, Couchbase, HyperDex, MarkLogic, MongoDB, OrientDB, Qizx
* Key-value: CouchDB, Dynamo, FoundationDB, HyperDex, MemcacheDB, Redis, Riak, FairCom c-treeACE, Aerospike, OrientDB, MUMPS
* Graph: Allegro, Neo4J, InfiniteGraph, OrientDB, Virtuoso, Stardog
* Multi-model: OrientDB, FoundationDB, ArangoDB, Alchemy Database, CortexDB
* Object model  Cach√©

Relational vs. NoSQL Databases:

* Relational databases
    Data stored as table rows
    Relationships between related rows
    Single entity spans multiple tables
    RDBMS systems are very mature, rock solid

* NoSQL databases
    Data stored as documents
    Single entity (document) is a single record
    Documents do not have a fixed structure
